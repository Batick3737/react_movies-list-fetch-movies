{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","addMovieInList","useState","setQuery","setMovie","isLoading","setLoading","error","setError","addMovie","a","movieFromServer","Title","plot","Plot","poster","Poster","imdbID","newMove","onSubmit","event","preventDefault","htmlFor","type","id","value","placeholder","onChange","target","classNames","disabled","length","onClick","App","setMovies","move","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4069175c.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie | null,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie?.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie?.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie?.description}\n        <br />\n        <a href={movie?.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=d0e9c53e';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard/MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  addMovieInList: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovieInList }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const createNewMove = (\n    title: string,\n    plot: string,\n    poster: string,\n    imdbId: string,\n  ) => {\n    const newMovie = {\n      title,\n      description: plot,\n      imgUrl: poster === 'N/A'\n        ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n        : poster,\n      imdbUrl: `https://www.imdb.com/title/${imdbId}`,\n      imdbId,\n    };\n\n    return newMovie;\n  };\n\n  const addMovie = async () => {\n    setLoading(true);\n    const movieFromServer = await getMovie(query);\n\n    if ('Error' in movieFromServer) {\n      setError(true);\n      setLoading(false);\n    } else {\n      const newMove = createNewMove(\n        movieFromServer.Title,\n        movieFromServer.Plot,\n        movieFromServer.Poster,\n        movieFromServer.imdbID,\n      );\n\n      setMovie(newMove);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          addMovie();\n          event.preventDefault();\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              value={query}\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              onChange={(event) => {\n                setQuery(event.target.value);\n                setError(false);\n              }}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                { 'is-loading': isLoading },\n              )}\n              disabled={!(query.length > 0)}\n            >\n              {movie ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  setQuery('');\n                  addMovieInList(movie);\n                  setMovie(null);\n                }}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const addMovieInList = (move:Movie) => {\n    if (movies.some(a => a.imdbId === move.imdbId)) {\n      return;\n    }\n\n    setMovies([...movies, move]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovieInList={addMovieInList} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}